{"ast":null,"code":"const initialState = {\n  cart: []\n};\nconst cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log('inside cart', state.cart, state, action.type, action.payload);\n  // switch(action.type) {\n  //     case \"Cart_Update\": return{ ...state,  \n  //                                 // cart: state.cart.concat(action.payload)\n  //                                 cart: state.cart.filter(item=>{\n  //                                     console.log('CARRRTTTT')\n  //                                     if(item.id===action.payload.id){\n  //                                         item.quantity += action.payload.quantity\n  //                                     }\n  //                                     else{\n  //                                         state.cart.concat(action.payload)\n  //                                     }\n  //                                 })\n\n  //                             };\n  //     case \"Cart_Empty\": return{ ...state, cart:[] };\n  //     default: return { ...state, cart:[] };\n  // }\n  if (action.type == 'Cart_Update') {\n    console.log(state);\n  } else {\n    return {\n      initialState\n    };\n  }\n};\nexport default cartReducer;","map":{"version":3,"names":["initialState","cart","cartReducer","state","arguments","length","undefined","action","console","log","type","payload"],"sources":["/Users/simisl/Downloads/internshala_react_programs/ecommerce/frontend/src/redux/cartReducer.js"],"sourcesContent":["\n\nconst initialState = {\n    cart:[]\n}\n\nconst cartReducer = (state=initialState, action) => {\n    \n    console.log('inside cart',state.cart,state, action.type,action.payload)\n    // switch(action.type) {\n    //     case \"Cart_Update\": return{ ...state,  \n    //                                 // cart: state.cart.concat(action.payload)\n    //                                 cart: state.cart.filter(item=>{\n    //                                     console.log('CARRRTTTT')\n    //                                     if(item.id===action.payload.id){\n    //                                         item.quantity += action.payload.quantity\n    //                                     }\n    //                                     else{\n    //                                         state.cart.concat(action.payload)\n    //                                     }\n    //                                 })\n                                        \n    //                             };\n    //     case \"Cart_Empty\": return{ ...state, cart:[] };\n    //     default: return { ...state, cart:[] };\n    // }\n    if(action.type == 'Cart_Update'){\n        console.log(state)\n        \n    }\n    else{\n        return {initialState};\n    }\n  \n}\n\nexport default cartReducer"],"mappings":"AAEA,MAAMA,YAAY,GAAG;EACjBC,IAAI,EAAC;AACT,CAAC;AAED,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAgC;EAAA,IAA/BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAACJ,YAAY;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAE3CE,OAAO,CAACC,GAAG,CAAC,aAAa,EAACN,KAAK,CAACF,IAAI,EAACE,KAAK,EAAEI,MAAM,CAACG,IAAI,EAACH,MAAM,CAACI,OAAO,CAAC;EACvE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA,IAAGJ,MAAM,CAACG,IAAI,IAAI,aAAa,EAAC;IAC5BF,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;EAEtB,CAAC,MACG;IACA,OAAO;MAACH;IAAY,CAAC;EACzB;AAEJ,CAAC;AAED,eAAeE,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}